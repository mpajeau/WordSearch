/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.pajeau;

import net.pajeau.WordSearch;

import org.junit.*;
import static org.junit.Assert.*;

import java.io.*;

public class AppTest {
    private static WordSearch myWordSearch;

    @BeforeClass public static void setupTestSession()
    {
        myWordSearch = new WordSearch();
    }

    @Before public void setupOneTest()
    {
        myWordSearch.ResetPuzzle();
    }

    @Test public void wordSearchThrowsIOExceptionIfPuzzleDataIsEmpty() {
        IOException anException = null;

        String anEmptyPuzzle = "";
        StringReader aStringReader = new StringReader(anEmptyPuzzle);

        try
        {
            myWordSearch.importPuzzle(aStringReader);
        }
        catch (IOException e)
        {
            System.out.println(e.getMessage());
            anException = e;
        }

        aStringReader.close();

        assertNotNull("No IOException was thrown!", anException);
    }

    @Test public void wordSearchThrowsIOExceptionIfSearchWordsAreShorterThanTwoCharacters() {
        IOException anException = null;

        String anInvalidSearchWordList = "AB,C,DE,FG,HI";
        StringReader aStringReader = new StringReader(anInvalidSearchWordList);

        try
        {
            myWordSearch.importPuzzle(aStringReader);
        }
        catch (IOException e)
        {
            System.out.println(e.getMessage());
            anException = e;
        }

        aStringReader.close();

        assertNotNull("No IOException was thrown!", anException);
    }

    @Test public void wordSearchThrowsIOExceptionIfPuzzleGridHasFewerThanTwoLines() {
        IOException anException = null;

        String anInvalidPuzzleGrid = 
            "BONES,KHAN,KIRK,SCOTTY,SPOCK,SULU,UHURA,CHEKOV\n" + 
            "U,M,K,H,U,L,K,I,N,V,J,O,C,W,E\n";

        StringReader aStringReader = new StringReader(anInvalidPuzzleGrid);

        try
        {
            myWordSearch.importPuzzle(aStringReader);
        }
        catch (IOException e)
        {
            System.out.println(e.getMessage());
            anException = e;
        }

        aStringReader.close();

        assertNotNull("No IOException was thrown!", anException);
    }

    @Test public void wordSearchThrowsIOExceptionIfPuzzleGridHasTooFewRows() {
        IOException anException = null;

        String anInvalidPuzzleGrid = 
            "BONES,KHAN,KIRK,SCOTTY,SPOCK,SULU,UHURA,CHEKOV\n" + 
            "U,M,K,H,U,L,K,I,N,V,J,O,C,W,E\n" +
            "L,L,S,H,K,Z,Z,W,Z,C,G,J,U,Y,G\n" + 
            "H,S,U,P,J,P,R,J,D,H,S,B,X,T,G\n" +
            "K,Y,L,B,Q,Q,P,M,D,F,C,K,E,A,B\n";
            
        StringReader aStringReader = new StringReader(anInvalidPuzzleGrid);

        try
        {
            myWordSearch.importPuzzle(aStringReader);
        }
        catch (IOException e)
        {
            System.out.println(e.getMessage());
            anException = e;
        }

        aStringReader.close();

        assertNotNull("No IOException was thrown!", anException);
    }

    @Test public void wordSearchThrowsIOExceptionIfPuzzleGridIsJagged() {
        IOException anException = null;

        String anInvalidPuzzleGrid = 
            "BONES,KHAN,KIRK,SCOTTY,SPOCK,SULU,UHURA,CHEKOV\n" + 
            "U,M,K,H,U,L,K,I,N,V,J,O,C,W,E\n" +
            "L,L,S,H,K,Z,Z,W,Z,C,G,J,U,Y,G\n" + 
            "H,S,U,P,J,P,R,J,D,H,S,B,X,T,G\n" +
            "B,R,J,S,O,E,Q,E,T,I,K,K,G,L,E\n" +
            "A,Y,O,A,G,C,I,R,D,Q,H,R,T,C,D\n" +
            "S,C,O,T,T,Y,K,Z,R,E,P,P,X,P,F\n" +
            "B,L,Q,S,L,N,E,E,E,V,U,L,F,M,Z\n" +
            "O,K,R,I,K,A,M,M,R,M,F,B,A,V,P\n" +
            "N,U,I,I,Y,H,Q,M,E,M,Q,R,O,F\n" +
            "E,Y,Z,Y,G,K,Q,J,P,C,Q,K,Y,A,K\n" +
            "S,J,F,Z,M,Q,I,B,D,B,E,M,K,W,D\n" +
            "T,G,L,B,H,C,B,E,C,H,T,O,Y,I,K\n" +
            "O,J,Y,E,U,L,N,C,C,L,Y,B,Z,U,H\n" +
            "W,Z,M,I,S,U,K,U,R,B,I,D,U,X,S\n" +
            "K,Y,L,B,Q,Q,P,M,D,F,C,K,E,A,B\n";
            
        StringReader aStringReader = new StringReader(anInvalidPuzzleGrid);

        try
        {
            myWordSearch.importPuzzle(aStringReader);
        }
        catch (IOException e)
        {
            System.out.println(e.getMessage());
            anException = e;
        }

        aStringReader.close();

        assertNotNull("No IOException was thrown!", anException);
    }
}
